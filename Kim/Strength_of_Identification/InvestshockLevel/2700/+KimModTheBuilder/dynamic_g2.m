function g2 = dynamic_g2(T, y, x, params, steady_state, it_, T_flag)
% function g2 = dynamic_g2(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g2
%

if T_flag
    T = KimModTheBuilder.dynamic_g2_tt(T, y, x, params, steady_state, it_);
end
v2 = zeros(78,3);
v2(1,1)=1;
v2(2,1)=1;
v2(3,1)=1;
v2(4,1)=1;
v2(5,1)=1;
v2(6,1)=1;
v2(7,1)=1;
v2(8,1)=1;
v2(9,1)=1;
v2(10,1)=2;
v2(11,1)=2;
v2(12,1)=2;
v2(13,1)=2;
v2(14,1)=2;
v2(15,1)=2;
v2(16,1)=2;
v2(17,1)=2;
v2(18,1)=2;
v2(19,1)=2;
v2(20,1)=2;
v2(21,1)=2;
v2(22,1)=2;
v2(23,1)=2;
v2(24,1)=2;
v2(25,1)=2;
v2(26,1)=2;
v2(27,1)=2;
v2(28,1)=2;
v2(29,1)=2;
v2(30,1)=2;
v2(31,1)=2;
v2(32,1)=2;
v2(33,1)=2;
v2(34,1)=2;
v2(35,1)=2;
v2(36,1)=2;
v2(37,1)=2;
v2(38,1)=3;
v2(39,1)=3;
v2(40,1)=3;
v2(41,1)=3;
v2(42,1)=3;
v2(43,1)=3;
v2(44,1)=3;
v2(45,1)=3;
v2(46,1)=3;
v2(47,1)=3;
v2(48,1)=3;
v2(49,1)=3;
v2(50,1)=3;
v2(51,1)=3;
v2(52,1)=3;
v2(53,1)=3;
v2(54,1)=3;
v2(55,1)=3;
v2(56,1)=4;
v2(57,1)=4;
v2(58,1)=4;
v2(59,1)=4;
v2(60,1)=4;
v2(61,1)=4;
v2(62,1)=4;
v2(63,1)=4;
v2(64,1)=4;
v2(65,1)=5;
v2(66,1)=5;
v2(67,1)=5;
v2(68,1)=6;
v2(69,1)=6;
v2(70,1)=6;
v2(71,1)=7;
v2(72,1)=7;
v2(73,1)=7;
v2(74,1)=7;
v2(75,1)=8;
v2(76,1)=8;
v2(77,1)=9;
v2(78,1)=9;
v2(1,2)=81;
v2(2,2)=82;
v2(3,2)=100;
v2(4,2)=85;
v2(5,2)=157;
v2(6,2)=241;
v2(7,2)=101;
v2(8,2)=104;
v2(9,2)=158;
v2(10,2)=81;
v2(11,2)=82;
v2(12,2)=100;
v2(13,2)=85;
v2(14,2)=157;
v2(15,2)=101;
v2(16,2)=103;
v2(17,2)=139;
v2(18,2)=104;
v2(19,2)=158;
v2(20,2)=105;
v2(21,2)=177;
v2(22,2)=107;
v2(23,2)=215;
v2(24,2)=141;
v2(25,2)=142;
v2(26,2)=160;
v2(27,2)=143;
v2(28,2)=179;
v2(29,2)=145;
v2(30,2)=217;
v2(31,2)=162;
v2(32,2)=180;
v2(33,2)=164;
v2(34,2)=218;
v2(35,2)=183;
v2(36,2)=219;
v2(37,2)=221;
v2(38,2)=263;
v2(39,2)=299;
v2(40,2)=141;
v2(41,2)=148;
v2(42,2)=274;
v2(43,2)=149;
v2(44,2)=293;
v2(45,2)=150;
v2(46,2)=312;
v2(47,2)=281;
v2(48,2)=282;
v2(49,2)=300;
v2(50,2)=283;
v2(51,2)=319;
v2(52,2)=162;
v2(53,2)=180;
v2(54,2)=302;
v2(55,2)=320;
v2(56,2)=101;
v2(57,2)=96;
v2(58,2)=6;
v2(59,2)=107;
v2(60,2)=215;
v2(61,2)=1;
v2(62,2)=12;
v2(63,2)=210;
v2(64,2)=221;
v2(65,2)=1;
v2(66,2)=11;
v2(67,2)=191;
v2(68,2)=1;
v2(69,2)=11;
v2(70,2)=191;
v2(71,2)=81;
v2(72,2)=82;
v2(73,2)=100;
v2(74,2)=101;
v2(75,2)=21;
v2(76,2)=201;
v2(77,2)=41;
v2(78,2)=221;
v2(1,3)=y(9)*(T(26)*((1-T(1))*T(2)*(1-T(1))*T(2)*((1-T(1))*T(24)-((1-T(1))*T(24)+y(5)*(1-T(1))*T(48)))-((1-T(1))*T(2)-y(5)*(1-T(1))*T(24))*((1-T(1))*T(2)*(1-T(1))*T(24)+(1-T(1))*T(2)*(1-T(1))*T(24)))/((1-T(1))*T(2)*(1-T(1))*T(2)*(1-T(1))*T(2)*(1-T(1))*T(2))+T(25)*T(25)*T(49))-(1-T(4))*getPowerDeriv(y(5)-T(3),(-1),2);
v2(2,3)=y(9)*(T(26)*((1-T(1))*T(2)*(1-T(1))*T(2)*((1-T(1))*T(30)-y(5)*(1-T(1))*T(22)*T(29)*T(47))-((1-T(1))*T(2)-y(5)*(1-T(1))*T(24))*((1-T(1))*T(2)*(1-T(1))*T(30)+(1-T(1))*T(2)*(1-T(1))*T(30)))/((1-T(1))*T(2)*(1-T(1))*T(2)*(1-T(1))*T(2)*(1-T(1))*T(2))+T(25)*T(31)*T(49));
v2(3,3)=v2(2,3);
v2(4,3)=T(25)*T(26);
v2(5,3)=v2(4,3);
v2(6,3)=(-(T(10)*(-T(6))*getPowerDeriv(y(13)-T(5),(-1),2)));
v2(7,3)=y(9)*(T(31)*T(31)*T(49)+T(26)*((1-T(1))*T(2)*(1-T(1))*T(2)*(-(y(5)*(1-T(1))*T(50)))-(-(y(5)*(1-T(1))*T(30)))*((1-T(1))*T(2)*(1-T(1))*T(30)+(1-T(1))*T(2)*(1-T(1))*T(30)))/((1-T(1))*T(2)*(1-T(1))*T(2)*(1-T(1))*T(2)*(1-T(1))*T(2)));
v2(8,3)=T(26)*T(31);
v2(9,3)=v2(8,3);
v2(10,3)=y(9)*(T(28)*(T(1)*T(2)*T(1)*T(2)*(-(y(6)*T(1)*T(48)))-(-(y(6)*T(1)*T(24)))*(T(1)*T(2)*T(1)*T(24)+T(1)*T(2)*T(1)*T(24)))/(T(1)*T(2)*T(1)*T(2)*T(1)*T(2)*T(1)*T(2))+T(27)*T(27)*T(51));
v2(11,3)=y(9)*(T(28)*(T(1)*T(2)*T(1)*T(2)*(-(T(1)*T(24)+y(6)*T(1)*T(22)*T(29)*T(47)))-(-(y(6)*T(1)*T(24)))*(T(1)*T(2)*T(1)*T(30)+T(1)*T(2)*T(1)*T(30)))/(T(1)*T(2)*T(1)*T(2)*T(1)*T(2)*T(1)*T(2))+T(27)*T(32)*T(51));
v2(12,3)=v2(11,3);
v2(13,3)=T(27)*T(28);
v2(14,3)=v2(13,3);
v2(15,3)=y(9)*(T(32)*T(32)*T(51)+T(28)*(T(1)*T(2)*T(1)*T(2)*(T(1)*T(30)-(T(1)*T(30)+y(6)*T(1)*T(50)))-(T(1)*T(2)-y(6)*T(1)*T(30))*(T(1)*T(2)*T(1)*T(30)+T(1)*T(2)*T(1)*T(30)))/(T(1)*T(2)*T(1)*T(2)*T(1)*T(2)*T(1)*T(2)))-T(16)*(T(34)*(-((-(y(8)*params(3)))*(y(6)+y(6))))/(y(6)*y(6)*y(6)*y(6))+T(33)*T(33)*T(52));
v2(16,3)=(-(T(16)*(T(34)*(-params(3))/(y(6)*y(6))+T(33)*params(3)/y(6)*T(52))));
v2(17,3)=v2(16,3);
v2(18,3)=T(28)*T(32)-T(33)*T(34)*y(10)*T(15);
v2(19,3)=v2(18,3);
v2(20,3)=(-(T(33)*T(34)*y(9)*T(15)));
v2(21,3)=v2(20,3);
v2(22,3)=(-(T(33)*T(34)*T(46)));
v2(23,3)=v2(22,3);
v2(24,3)=(-(T(16)*params(3)/y(6)*params(3)/y(6)*T(52)));
v2(25,3)=(-(T(42)*y(10)*T(15)));
v2(26,3)=v2(25,3);
v2(27,3)=(-(T(42)*y(9)*T(15)));
v2(28,3)=v2(27,3);
v2(29,3)=(-(T(42)*T(46)));
v2(30,3)=v2(29,3);
v2(31,3)=(-(T(15)*T(17)));
v2(32,3)=v2(31,3);
v2(33,3)=(-(T(17)*y(10)*T(45)));
v2(34,3)=v2(33,3);
v2(35,3)=(-(T(17)*y(9)*T(45)));
v2(36,3)=v2(35,3);
v2(37,3)=(-(T(17)*y(9)*y(10)*getPowerDeriv(y(12),(-params(9)),2)));
v2(38,3)=(-T(10));
v2(39,3)=v2(38,3);
v2(40,3)=(-(T(10)*y(16)*(1-params(3))*y(17)*(T(44)*(-((-y(15))*(y(8)+y(8))))/(y(8)*y(8)*y(8)*y(8))+T(43)*T(43)*T(53))));
v2(41,3)=(-(T(10)*y(16)*(1-params(3))*y(17)*(T(44)*(-1)/(y(8)*y(8))+T(43)*1/y(8)*T(53))));
v2(42,3)=v2(41,3);
v2(43,3)=(-(T(10)*(1-params(3))*y(17)*T(43)*T(44)));
v2(44,3)=v2(43,3);
v2(45,3)=(-(T(10)*y(16)*(1-params(3))*T(43)*T(44)));
v2(46,3)=v2(45,3);
v2(47,3)=(-(T(10)*y(16)*(1-params(3))*y(17)*1/y(8)*1/y(8)*T(53)));
v2(48,3)=(-(T(10)*(1-params(3))*y(17)*T(44)*1/y(8)));
v2(49,3)=v2(48,3);
v2(50,3)=(-(T(10)*y(16)*(1-params(3))*T(44)*1/y(8)));
v2(51,3)=v2(50,3);
v2(52,3)=1;
v2(53,3)=v2(52,3);
v2(54,3)=(-(T(10)*(1-params(3))*T(18)));
v2(55,3)=v2(54,3);
v2(56,3)=(-(T(38)*params(3)*T(35)*T(35)*T(54)+T(37)*T(37)*T(55)));
v2(57,3)=(-(T(37)*T(39)*T(55)));
v2(58,3)=v2(57,3);
v2(59,3)=(-(T(38)*params(3)*(T(36)*1/params(3)+T(35)*y(6)/params(3)*T(54))+T(37)*T(56)));
v2(60,3)=v2(59,3);
v2(61,3)=(-(T(39)*T(39)*T(55)+T(38)*(1-params(3))*getPowerDeriv(y(1),1-params(9),2)));
v2(62,3)=(-(T(39)*T(56)));
v2(63,3)=v2(62,3);
v2(64,3)=(-(params(3)*T(36)*y(6)/params(3)*T(56)+T(38)*params(3)*y(6)/params(3)*y(6)/params(3)*T(54)));
v2(65,3)=(-(y(11)*getPowerDeriv(T(7),params(1),2)));
v2(66,3)=(-T(40));
v2(67,3)=v2(66,3);
v2(68,3)=(-(y(11)*params(1)*getPowerDeriv(T(7),params(1)-1,2)));
v2(69,3)=(-T(41));
v2(70,3)=v2(69,3);
v2(71,3)=(-T(48));
v2(72,3)=(-(T(22)*T(29)*T(47)));
v2(73,3)=v2(72,3);
v2(74,3)=(-T(50));
v2(75,3)=(-(params(6)*(-1)/(y(2)*y(2))));
v2(76,3)=(-1)/(y(11)*y(11));
v2(77,3)=(-(params(11)*(-1)/(y(3)*y(3))));
v2(78,3)=(-1)/(y(12)*y(12));
g2 = sparse(v2(:,1),v2(:,2),v2(:,3),9,361);
end
